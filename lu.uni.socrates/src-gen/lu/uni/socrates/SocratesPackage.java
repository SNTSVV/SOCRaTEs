/**
 * generated by Xtext 2.17.0.M1
 */
package lu.uni.socrates;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see lu.uni.socrates.SocratesFactory
 * @model kind="package"
 * @generated
 */
public interface SocratesPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "socrates";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.uni.lu/socrates";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "socrates";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  SocratesPackage eINSTANCE = lu.uni.socrates.impl.SocratesPackageImpl.init();

  /**
   * The meta object id for the '{@link lu.uni.socrates.impl.SocratesImpl <em>Socrates</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see lu.uni.socrates.impl.SocratesImpl
   * @see lu.uni.socrates.impl.SocratesPackageImpl#getSocrates()
   * @generated
   */
  int SOCRATES = 0;

  /**
   * The feature id for the '<em><b>Oracles</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SOCRATES__ORACLES = 0;

  /**
   * The number of structural features of the '<em>Socrates</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SOCRATES_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link lu.uni.socrates.impl.OracleImpl <em>Oracle</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see lu.uni.socrates.impl.OracleImpl
   * @see lu.uni.socrates.impl.SocratesPackageImpl#getOracle()
   * @generated
   */
  int ORACLE = 1;

  /**
   * The feature id for the '<em><b>Model Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ORACLE__MODEL_NAME = 0;

  /**
   * The feature id for the '<em><b>Path</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ORACLE__PATH = 1;

  /**
   * The feature id for the '<em><b>Reqname</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ORACLE__REQNAME = 2;

  /**
   * The feature id for the '<em><b>Signdef</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ORACLE__SIGNDEF = 3;

  /**
   * The feature id for the '<em><b>Constant Definitions</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ORACLE__CONSTANT_DEFINITIONS = 4;

  /**
   * The feature id for the '<em><b>Requirement</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ORACLE__REQUIREMENT = 5;

  /**
   * The number of structural features of the '<em>Oracle</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ORACLE_FEATURE_COUNT = 6;

  /**
   * The meta object id for the '{@link lu.uni.socrates.impl.RequirementImpl <em>Requirement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see lu.uni.socrates.impl.RequirementImpl
   * @see lu.uni.socrates.impl.SocratesPackageImpl#getRequirement()
   * @generated
   */
  int REQUIREMENT = 2;

  /**
   * The feature id for the '<em><b>Formula</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REQUIREMENT__FORMULA = 0;

  /**
   * The number of structural features of the '<em>Requirement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REQUIREMENT_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link lu.uni.socrates.impl.SignalsdefinitionImpl <em>Signalsdefinition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see lu.uni.socrates.impl.SignalsdefinitionImpl
   * @see lu.uni.socrates.impl.SocratesPackageImpl#getSignalsdefinition()
   * @generated
   */
  int SIGNALSDEFINITION = 3;

  /**
   * The feature id for the '<em><b>Signals</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIGNALSDEFINITION__SIGNALS = 0;

  /**
   * The number of structural features of the '<em>Signalsdefinition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIGNALSDEFINITION_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link lu.uni.socrates.impl.ConstantsDefinitionImpl <em>Constants Definition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see lu.uni.socrates.impl.ConstantsDefinitionImpl
   * @see lu.uni.socrates.impl.SocratesPackageImpl#getConstantsDefinition()
   * @generated
   */
  int CONSTANTS_DEFINITION = 4;

  /**
   * The feature id for the '<em><b>Constants</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANTS_DEFINITION__CONSTANTS = 0;

  /**
   * The number of structural features of the '<em>Constants Definition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANTS_DEFINITION_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link lu.uni.socrates.impl.ConstantDefinitionImpl <em>Constant Definition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see lu.uni.socrates.impl.ConstantDefinitionImpl
   * @see lu.uni.socrates.impl.SocratesPackageImpl#getConstantDefinition()
   * @generated
   */
  int CONSTANT_DEFINITION = 5;

  /**
   * The feature id for the '<em><b>Constantid</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT_DEFINITION__CONSTANTID = 0;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT_DEFINITION__VALUE = 1;

  /**
   * The number of structural features of the '<em>Constant Definition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT_DEFINITION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link lu.uni.socrates.impl.SignalIDImpl <em>Signal ID</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see lu.uni.socrates.impl.SignalIDImpl
   * @see lu.uni.socrates.impl.SocratesPackageImpl#getSignalID()
   * @generated
   */
  int SIGNAL_ID = 6;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIGNAL_ID__NAME = 0;

  /**
   * The number of structural features of the '<em>Signal ID</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIGNAL_ID_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link lu.uni.socrates.impl.ConstantIdImpl <em>Constant Id</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see lu.uni.socrates.impl.ConstantIdImpl
   * @see lu.uni.socrates.impl.SocratesPackageImpl#getConstantId()
   * @generated
   */
  int CONSTANT_ID = 7;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT_ID__NAME = 0;

  /**
   * The number of structural features of the '<em>Constant Id</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT_ID_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link lu.uni.socrates.impl.TvariableImpl <em>Tvariable</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see lu.uni.socrates.impl.TvariableImpl
   * @see lu.uni.socrates.impl.SocratesPackageImpl#getTvariable()
   * @generated
   */
  int TVARIABLE = 8;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TVARIABLE__NAME = 0;

  /**
   * The number of structural features of the '<em>Tvariable</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TVARIABLE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link lu.uni.socrates.impl.negationformulaImpl <em>negationformula</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see lu.uni.socrates.impl.negationformulaImpl
   * @see lu.uni.socrates.impl.SocratesPackageImpl#getnegationformula()
   * @generated
   */
  int NEGATIONFORMULA = 9;

  /**
   * The feature id for the '<em><b>Negationchild</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NEGATIONFORMULA__NEGATIONCHILD = 0;

  /**
   * The number of structural features of the '<em>negationformula</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NEGATIONFORMULA_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link lu.uni.socrates.impl.forAllformulaImpl <em>for Allformula</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see lu.uni.socrates.impl.forAllformulaImpl
   * @see lu.uni.socrates.impl.SocratesPackageImpl#getforAllformula()
   * @generated
   */
  int FOR_ALLFORMULA = 10;

  /**
   * The feature id for the '<em><b>Bound</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOR_ALLFORMULA__BOUND = 0;

  /**
   * The feature id for the '<em><b>Forallchild</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOR_ALLFORMULA__FORALLCHILD = 1;

  /**
   * The number of structural features of the '<em>for Allformula</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOR_ALLFORMULA_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link lu.uni.socrates.impl.existsformulaImpl <em>existsformula</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see lu.uni.socrates.impl.existsformulaImpl
   * @see lu.uni.socrates.impl.SocratesPackageImpl#getexistsformula()
   * @generated
   */
  int EXISTSFORMULA = 11;

  /**
   * The feature id for the '<em><b>Bound</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXISTSFORMULA__BOUND = 0;

  /**
   * The feature id for the '<em><b>Existschild</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXISTSFORMULA__EXISTSCHILD = 1;

  /**
   * The number of structural features of the '<em>existsformula</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXISTSFORMULA_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link lu.uni.socrates.impl.formulaImpl <em>formula</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see lu.uni.socrates.impl.formulaImpl
   * @see lu.uni.socrates.impl.SocratesPackageImpl#getformula()
   * @generated
   */
  int FORMULA = 12;

  /**
   * The feature id for the '<em><b>F</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FORMULA__F = 0;

  /**
   * The number of structural features of the '<em>formula</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FORMULA_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link lu.uni.socrates.impl.formulabImpl <em>formulab</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see lu.uni.socrates.impl.formulabImpl
   * @see lu.uni.socrates.impl.SocratesPackageImpl#getformulab()
   * @generated
   */
  int FORMULAB = 13;

  /**
   * The feature id for the '<em><b>A</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FORMULAB__A = 0;

  /**
   * The feature id for the '<em><b>T</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FORMULAB__T = 1;

  /**
   * The number of structural features of the '<em>formulab</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FORMULAB_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link lu.uni.socrates.impl.formulabprimeImpl <em>formulabprime</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see lu.uni.socrates.impl.formulabprimeImpl
   * @see lu.uni.socrates.impl.SocratesPackageImpl#getformulabprime()
   * @generated
   */
  int FORMULABPRIME = 14;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FORMULABPRIME__OP = 0;

  /**
   * The feature id for the '<em><b>T2</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FORMULABPRIME__T2 = 1;

  /**
   * The feature id for the '<em><b>F</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FORMULABPRIME__F = 2;

  /**
   * The number of structural features of the '<em>formulabprime</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FORMULABPRIME_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link lu.uni.socrates.impl.termImpl <em>term</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see lu.uni.socrates.impl.termImpl
   * @see lu.uni.socrates.impl.SocratesPackageImpl#getterm()
   * @generated
   */
  int TERM = 15;

  /**
   * The feature id for the '<em><b>A</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TERM__A = 0;

  /**
   * The feature id for the '<em><b>T</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TERM__T = 1;

  /**
   * The number of structural features of the '<em>term</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TERM_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link lu.uni.socrates.impl.termprimeImpl <em>termprime</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see lu.uni.socrates.impl.termprimeImpl
   * @see lu.uni.socrates.impl.SocratesPackageImpl#gettermprime()
   * @generated
   */
  int TERMPRIME = 16;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TERMPRIME__OP = 0;

  /**
   * The feature id for the '<em><b>T</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TERMPRIME__T = 1;

  /**
   * The feature id for the '<em><b>F1</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TERMPRIME__F1 = 2;

  /**
   * The number of structural features of the '<em>termprime</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TERMPRIME_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link lu.uni.socrates.impl.expressionImpl <em>expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see lu.uni.socrates.impl.expressionImpl
   * @see lu.uni.socrates.impl.SocratesPackageImpl#getexpression()
   * @generated
   */
  int EXPRESSION = 17;

  /**
   * The feature id for the '<em><b>Expb</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__EXPB = 0;

  /**
   * The number of structural features of the '<em>expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link lu.uni.socrates.impl.expressionbImpl <em>expressionb</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see lu.uni.socrates.impl.expressionbImpl
   * @see lu.uni.socrates.impl.SocratesPackageImpl#getexpressionb()
   * @generated
   */
  int EXPRESSIONB = 18;

  /**
   * The feature id for the '<em><b>Term</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSIONB__TERM = 0;

  /**
   * The feature id for the '<em><b>Expprime</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSIONB__EXPPRIME = 1;

  /**
   * The number of structural features of the '<em>expressionb</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSIONB_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link lu.uni.socrates.impl.expressionprimeImpl <em>expressionprime</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see lu.uni.socrates.impl.expressionprimeImpl
   * @see lu.uni.socrates.impl.SocratesPackageImpl#getexpressionprime()
   * @generated
   */
  int EXPRESSIONPRIME = 19;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSIONPRIME__OP = 0;

  /**
   * The feature id for the '<em><b>T2</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSIONPRIME__T2 = 1;

  /**
   * The feature id for the '<em><b>F</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSIONPRIME__F = 2;

  /**
   * The number of structural features of the '<em>expressionprime</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSIONPRIME_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link lu.uni.socrates.impl.expressiontermImpl <em>expressionterm</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see lu.uni.socrates.impl.expressiontermImpl
   * @see lu.uni.socrates.impl.SocratesPackageImpl#getexpressionterm()
   * @generated
   */
  int EXPRESSIONTERM = 20;

  /**
   * The feature id for the '<em><b>Term</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSIONTERM__TERM = 0;

  /**
   * The feature id for the '<em><b>Expprime</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSIONTERM__EXPPRIME = 1;

  /**
   * The number of structural features of the '<em>expressionterm</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSIONTERM_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link lu.uni.socrates.impl.expressiontermprimeImpl <em>expressiontermprime</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see lu.uni.socrates.impl.expressiontermprimeImpl
   * @see lu.uni.socrates.impl.SocratesPackageImpl#getexpressiontermprime()
   * @generated
   */
  int EXPRESSIONTERMPRIME = 21;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSIONTERMPRIME__OP = 0;

  /**
   * The feature id for the '<em><b>T2</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSIONTERMPRIME__T2 = 1;

  /**
   * The feature id for the '<em><b>F</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSIONTERMPRIME__F = 2;

  /**
   * The number of structural features of the '<em>expressiontermprime</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSIONTERMPRIME_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link lu.uni.socrates.impl.ExpressionAtomImpl <em>Expression Atom</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see lu.uni.socrates.impl.ExpressionAtomImpl
   * @see lu.uni.socrates.impl.SocratesPackageImpl#getExpressionAtom()
   * @generated
   */
  int EXPRESSION_ATOM = 22;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_ATOM__EXP = 0;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_ATOM__OP = 1;

  /**
   * The number of structural features of the '<em>Expression Atom</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_ATOM_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link lu.uni.socrates.impl.BasicexpressionImpl <em>Basicexpression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see lu.uni.socrates.impl.BasicexpressionImpl
   * @see lu.uni.socrates.impl.SocratesPackageImpl#getBasicexpression()
   * @generated
   */
  int BASICEXPRESSION = 23;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BASICEXPRESSION__EXP = 0;

  /**
   * The number of structural features of the '<em>Basicexpression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BASICEXPRESSION_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link lu.uni.socrates.impl.basicformulaeImpl <em>basicformulae</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see lu.uni.socrates.impl.basicformulaeImpl
   * @see lu.uni.socrates.impl.SocratesPackageImpl#getbasicformulae()
   * @generated
   */
  int BASICFORMULAE = 24;

  /**
   * The feature id for the '<em><b>F</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BASICFORMULAE__F = 0;

  /**
   * The number of structural features of the '<em>basicformulae</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BASICFORMULAE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link lu.uni.socrates.impl.boundtermImpl <em>boundterm</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see lu.uni.socrates.impl.boundtermImpl
   * @see lu.uni.socrates.impl.SocratesPackageImpl#getboundterm()
   * @generated
   */
  int BOUNDTERM = 25;

  /**
   * The feature id for the '<em><b>Ref</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOUNDTERM__REF = 0;

  /**
   * The feature id for the '<em><b>L</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOUNDTERM__L = 1;

  /**
   * The feature id for the '<em><b>Leftbound</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOUNDTERM__LEFTBOUND = 2;

  /**
   * The feature id for the '<em><b>Rightbound</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOUNDTERM__RIGHTBOUND = 3;

  /**
   * The feature id for the '<em><b>R</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOUNDTERM__R = 4;

  /**
   * The number of structural features of the '<em>boundterm</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOUNDTERM_FEATURE_COUNT = 5;

  /**
   * The meta object id for the '{@link lu.uni.socrates.impl.timedtermImpl <em>timedterm</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see lu.uni.socrates.impl.timedtermImpl
   * @see lu.uni.socrates.impl.SocratesPackageImpl#gettimedterm()
   * @generated
   */
  int TIMEDTERM = 26;

  /**
   * The feature id for the '<em><b>Inf</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TIMEDTERM__INF = 0;

  /**
   * The feature id for the '<em><b>Number</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TIMEDTERM__NUMBER = 1;

  /**
   * The feature id for the '<em><b>Ref</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TIMEDTERM__REF = 2;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TIMEDTERM__OP = 3;

  /**
   * The feature id for the '<em><b>Value</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TIMEDTERM__VALUE = 4;

  /**
   * The number of structural features of the '<em>timedterm</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TIMEDTERM_FEATURE_COUNT = 5;

  /**
   * The meta object id for the '{@link lu.uni.socrates.impl.atomImpl <em>atom</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see lu.uni.socrates.impl.atomImpl
   * @see lu.uni.socrates.impl.SocratesPackageImpl#getatom()
   * @generated
   */
  int ATOM = 27;

  /**
   * The feature id for the '<em><b>F</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATOM__F = 0;

  /**
   * The feature id for the '<em><b>S1</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATOM__S1 = 1;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATOM__OP = 2;

  /**
   * The feature id for the '<em><b>S2</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATOM__S2 = 3;

  /**
   * The number of structural features of the '<em>atom</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATOM_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link lu.uni.socrates.impl.valueImpl <em>value</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see lu.uni.socrates.impl.valueImpl
   * @see lu.uni.socrates.impl.SocratesPackageImpl#getvalue()
   * @generated
   */
  int VALUE = 28;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VALUE__EXP = 0;

  /**
   * The feature id for the '<em><b>Number</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VALUE__NUMBER = 1;

  /**
   * The feature id for the '<em><b>Ref</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VALUE__REF = 2;

  /**
   * The feature id for the '<em><b>Float</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VALUE__FLOAT = 3;

  /**
   * The number of structural features of the '<em>value</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VALUE_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link lu.uni.socrates.impl.SignalImpl <em>Signal</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see lu.uni.socrates.impl.SignalImpl
   * @see lu.uni.socrates.impl.SocratesPackageImpl#getSignal()
   * @generated
   */
  int SIGNAL = 29;

  /**
   * The feature id for the '<em><b>Signalid</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIGNAL__SIGNALID = 0;

  /**
   * The feature id for the '<em><b>Timdedterm</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIGNAL__TIMDEDTERM = 1;

  /**
   * The feature id for the '<em><b>Indx1</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIGNAL__INDX1 = 2;

  /**
   * The feature id for the '<em><b>Indx2</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIGNAL__INDX2 = 3;

  /**
   * The number of structural features of the '<em>Signal</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIGNAL_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link lu.uni.socrates.impl.AbsEXPImpl <em>Abs EXP</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see lu.uni.socrates.impl.AbsEXPImpl
   * @see lu.uni.socrates.impl.SocratesPackageImpl#getAbsEXP()
   * @generated
   */
  int ABS_EXP = 30;

  /**
   * The feature id for the '<em><b>Exp1</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ABS_EXP__EXP1 = 0;

  /**
   * The number of structural features of the '<em>Abs EXP</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ABS_EXP_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link lu.uni.socrates.impl.NormexpImpl <em>Normexp</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see lu.uni.socrates.impl.NormexpImpl
   * @see lu.uni.socrates.impl.SocratesPackageImpl#getNormexp()
   * @generated
   */
  int NORMEXP = 31;

  /**
   * The feature id for the '<em><b>Exp1</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NORMEXP__EXP1 = 0;

  /**
   * The number of structural features of the '<em>Normexp</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NORMEXP_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link lu.uni.socrates.impl.SinImpl <em>Sin</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see lu.uni.socrates.impl.SinImpl
   * @see lu.uni.socrates.impl.SocratesPackageImpl#getSin()
   * @generated
   */
  int SIN = 32;

  /**
   * The feature id for the '<em><b>Exp1</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIN__EXP1 = 0;

  /**
   * The number of structural features of the '<em>Sin</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIN_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link lu.uni.socrates.impl.CosImpl <em>Cos</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see lu.uni.socrates.impl.CosImpl
   * @see lu.uni.socrates.impl.SocratesPackageImpl#getCos()
   * @generated
   */
  int COS = 33;

  /**
   * The feature id for the '<em><b>Exp1</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COS__EXP1 = 0;

  /**
   * The number of structural features of the '<em>Cos</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COS_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link lu.uni.socrates.impl.SqrtImpl <em>Sqrt</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see lu.uni.socrates.impl.SqrtImpl
   * @see lu.uni.socrates.impl.SocratesPackageImpl#getSqrt()
   * @generated
   */
  int SQRT = 34;

  /**
   * The feature id for the '<em><b>Exp1</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SQRT__EXP1 = 0;

  /**
   * The number of structural features of the '<em>Sqrt</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SQRT_FEATURE_COUNT = 1;


  /**
   * Returns the meta object for class '{@link lu.uni.socrates.Socrates <em>Socrates</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Socrates</em>'.
   * @see lu.uni.socrates.Socrates
   * @generated
   */
  EClass getSocrates();

  /**
   * Returns the meta object for the containment reference list '{@link lu.uni.socrates.Socrates#getOracles <em>Oracles</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Oracles</em>'.
   * @see lu.uni.socrates.Socrates#getOracles()
   * @see #getSocrates()
   * @generated
   */
  EReference getSocrates_Oracles();

  /**
   * Returns the meta object for class '{@link lu.uni.socrates.Oracle <em>Oracle</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Oracle</em>'.
   * @see lu.uni.socrates.Oracle
   * @generated
   */
  EClass getOracle();

  /**
   * Returns the meta object for the attribute '{@link lu.uni.socrates.Oracle#getModelName <em>Model Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Model Name</em>'.
   * @see lu.uni.socrates.Oracle#getModelName()
   * @see #getOracle()
   * @generated
   */
  EAttribute getOracle_ModelName();

  /**
   * Returns the meta object for the attribute '{@link lu.uni.socrates.Oracle#getPath <em>Path</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Path</em>'.
   * @see lu.uni.socrates.Oracle#getPath()
   * @see #getOracle()
   * @generated
   */
  EAttribute getOracle_Path();

  /**
   * Returns the meta object for the attribute '{@link lu.uni.socrates.Oracle#getReqname <em>Reqname</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Reqname</em>'.
   * @see lu.uni.socrates.Oracle#getReqname()
   * @see #getOracle()
   * @generated
   */
  EAttribute getOracle_Reqname();

  /**
   * Returns the meta object for the containment reference '{@link lu.uni.socrates.Oracle#getSigndef <em>Signdef</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Signdef</em>'.
   * @see lu.uni.socrates.Oracle#getSigndef()
   * @see #getOracle()
   * @generated
   */
  EReference getOracle_Signdef();

  /**
   * Returns the meta object for the containment reference '{@link lu.uni.socrates.Oracle#getConstantDefinitions <em>Constant Definitions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Constant Definitions</em>'.
   * @see lu.uni.socrates.Oracle#getConstantDefinitions()
   * @see #getOracle()
   * @generated
   */
  EReference getOracle_ConstantDefinitions();

  /**
   * Returns the meta object for the containment reference '{@link lu.uni.socrates.Oracle#getRequirement <em>Requirement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Requirement</em>'.
   * @see lu.uni.socrates.Oracle#getRequirement()
   * @see #getOracle()
   * @generated
   */
  EReference getOracle_Requirement();

  /**
   * Returns the meta object for class '{@link lu.uni.socrates.Requirement <em>Requirement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Requirement</em>'.
   * @see lu.uni.socrates.Requirement
   * @generated
   */
  EClass getRequirement();

  /**
   * Returns the meta object for the containment reference '{@link lu.uni.socrates.Requirement#getFormula <em>Formula</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Formula</em>'.
   * @see lu.uni.socrates.Requirement#getFormula()
   * @see #getRequirement()
   * @generated
   */
  EReference getRequirement_Formula();

  /**
   * Returns the meta object for class '{@link lu.uni.socrates.Signalsdefinition <em>Signalsdefinition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Signalsdefinition</em>'.
   * @see lu.uni.socrates.Signalsdefinition
   * @generated
   */
  EClass getSignalsdefinition();

  /**
   * Returns the meta object for the containment reference list '{@link lu.uni.socrates.Signalsdefinition#getSignals <em>Signals</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Signals</em>'.
   * @see lu.uni.socrates.Signalsdefinition#getSignals()
   * @see #getSignalsdefinition()
   * @generated
   */
  EReference getSignalsdefinition_Signals();

  /**
   * Returns the meta object for class '{@link lu.uni.socrates.ConstantsDefinition <em>Constants Definition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Constants Definition</em>'.
   * @see lu.uni.socrates.ConstantsDefinition
   * @generated
   */
  EClass getConstantsDefinition();

  /**
   * Returns the meta object for the containment reference list '{@link lu.uni.socrates.ConstantsDefinition#getConstants <em>Constants</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Constants</em>'.
   * @see lu.uni.socrates.ConstantsDefinition#getConstants()
   * @see #getConstantsDefinition()
   * @generated
   */
  EReference getConstantsDefinition_Constants();

  /**
   * Returns the meta object for class '{@link lu.uni.socrates.ConstantDefinition <em>Constant Definition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Constant Definition</em>'.
   * @see lu.uni.socrates.ConstantDefinition
   * @generated
   */
  EClass getConstantDefinition();

  /**
   * Returns the meta object for the containment reference '{@link lu.uni.socrates.ConstantDefinition#getConstantid <em>Constantid</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Constantid</em>'.
   * @see lu.uni.socrates.ConstantDefinition#getConstantid()
   * @see #getConstantDefinition()
   * @generated
   */
  EReference getConstantDefinition_Constantid();

  /**
   * Returns the meta object for the attribute '{@link lu.uni.socrates.ConstantDefinition#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see lu.uni.socrates.ConstantDefinition#getValue()
   * @see #getConstantDefinition()
   * @generated
   */
  EAttribute getConstantDefinition_Value();

  /**
   * Returns the meta object for class '{@link lu.uni.socrates.SignalID <em>Signal ID</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Signal ID</em>'.
   * @see lu.uni.socrates.SignalID
   * @generated
   */
  EClass getSignalID();

  /**
   * Returns the meta object for the attribute '{@link lu.uni.socrates.SignalID#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see lu.uni.socrates.SignalID#getName()
   * @see #getSignalID()
   * @generated
   */
  EAttribute getSignalID_Name();

  /**
   * Returns the meta object for class '{@link lu.uni.socrates.ConstantId <em>Constant Id</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Constant Id</em>'.
   * @see lu.uni.socrates.ConstantId
   * @generated
   */
  EClass getConstantId();

  /**
   * Returns the meta object for the attribute '{@link lu.uni.socrates.ConstantId#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see lu.uni.socrates.ConstantId#getName()
   * @see #getConstantId()
   * @generated
   */
  EAttribute getConstantId_Name();

  /**
   * Returns the meta object for class '{@link lu.uni.socrates.Tvariable <em>Tvariable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Tvariable</em>'.
   * @see lu.uni.socrates.Tvariable
   * @generated
   */
  EClass getTvariable();

  /**
   * Returns the meta object for the attribute '{@link lu.uni.socrates.Tvariable#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see lu.uni.socrates.Tvariable#getName()
   * @see #getTvariable()
   * @generated
   */
  EAttribute getTvariable_Name();

  /**
   * Returns the meta object for class '{@link lu.uni.socrates.negationformula <em>negationformula</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>negationformula</em>'.
   * @see lu.uni.socrates.negationformula
   * @generated
   */
  EClass getnegationformula();

  /**
   * Returns the meta object for the containment reference '{@link lu.uni.socrates.negationformula#getNegationchild <em>Negationchild</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Negationchild</em>'.
   * @see lu.uni.socrates.negationformula#getNegationchild()
   * @see #getnegationformula()
   * @generated
   */
  EReference getnegationformula_Negationchild();

  /**
   * Returns the meta object for class '{@link lu.uni.socrates.forAllformula <em>for Allformula</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>for Allformula</em>'.
   * @see lu.uni.socrates.forAllformula
   * @generated
   */
  EClass getforAllformula();

  /**
   * Returns the meta object for the containment reference '{@link lu.uni.socrates.forAllformula#getBound <em>Bound</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Bound</em>'.
   * @see lu.uni.socrates.forAllformula#getBound()
   * @see #getforAllformula()
   * @generated
   */
  EReference getforAllformula_Bound();

  /**
   * Returns the meta object for the containment reference '{@link lu.uni.socrates.forAllformula#getForallchild <em>Forallchild</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Forallchild</em>'.
   * @see lu.uni.socrates.forAllformula#getForallchild()
   * @see #getforAllformula()
   * @generated
   */
  EReference getforAllformula_Forallchild();

  /**
   * Returns the meta object for class '{@link lu.uni.socrates.existsformula <em>existsformula</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>existsformula</em>'.
   * @see lu.uni.socrates.existsformula
   * @generated
   */
  EClass getexistsformula();

  /**
   * Returns the meta object for the containment reference '{@link lu.uni.socrates.existsformula#getBound <em>Bound</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Bound</em>'.
   * @see lu.uni.socrates.existsformula#getBound()
   * @see #getexistsformula()
   * @generated
   */
  EReference getexistsformula_Bound();

  /**
   * Returns the meta object for the containment reference '{@link lu.uni.socrates.existsformula#getExistschild <em>Existschild</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Existschild</em>'.
   * @see lu.uni.socrates.existsformula#getExistschild()
   * @see #getexistsformula()
   * @generated
   */
  EReference getexistsformula_Existschild();

  /**
   * Returns the meta object for class '{@link lu.uni.socrates.formula <em>formula</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>formula</em>'.
   * @see lu.uni.socrates.formula
   * @generated
   */
  EClass getformula();

  /**
   * Returns the meta object for the containment reference '{@link lu.uni.socrates.formula#getF <em>F</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>F</em>'.
   * @see lu.uni.socrates.formula#getF()
   * @see #getformula()
   * @generated
   */
  EReference getformula_F();

  /**
   * Returns the meta object for class '{@link lu.uni.socrates.formulab <em>formulab</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>formulab</em>'.
   * @see lu.uni.socrates.formulab
   * @generated
   */
  EClass getformulab();

  /**
   * Returns the meta object for the containment reference '{@link lu.uni.socrates.formulab#getA <em>A</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>A</em>'.
   * @see lu.uni.socrates.formulab#getA()
   * @see #getformulab()
   * @generated
   */
  EReference getformulab_A();

  /**
   * Returns the meta object for the containment reference '{@link lu.uni.socrates.formulab#getT <em>T</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>T</em>'.
   * @see lu.uni.socrates.formulab#getT()
   * @see #getformulab()
   * @generated
   */
  EReference getformulab_T();

  /**
   * Returns the meta object for class '{@link lu.uni.socrates.formulabprime <em>formulabprime</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>formulabprime</em>'.
   * @see lu.uni.socrates.formulabprime
   * @generated
   */
  EClass getformulabprime();

  /**
   * Returns the meta object for the attribute '{@link lu.uni.socrates.formulabprime#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see lu.uni.socrates.formulabprime#getOp()
   * @see #getformulabprime()
   * @generated
   */
  EAttribute getformulabprime_Op();

  /**
   * Returns the meta object for the containment reference '{@link lu.uni.socrates.formulabprime#getT2 <em>T2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>T2</em>'.
   * @see lu.uni.socrates.formulabprime#getT2()
   * @see #getformulabprime()
   * @generated
   */
  EReference getformulabprime_T2();

  /**
   * Returns the meta object for the containment reference '{@link lu.uni.socrates.formulabprime#getF <em>F</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>F</em>'.
   * @see lu.uni.socrates.formulabprime#getF()
   * @see #getformulabprime()
   * @generated
   */
  EReference getformulabprime_F();

  /**
   * Returns the meta object for class '{@link lu.uni.socrates.term <em>term</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>term</em>'.
   * @see lu.uni.socrates.term
   * @generated
   */
  EClass getterm();

  /**
   * Returns the meta object for the containment reference '{@link lu.uni.socrates.term#getA <em>A</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>A</em>'.
   * @see lu.uni.socrates.term#getA()
   * @see #getterm()
   * @generated
   */
  EReference getterm_A();

  /**
   * Returns the meta object for the containment reference '{@link lu.uni.socrates.term#getT <em>T</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>T</em>'.
   * @see lu.uni.socrates.term#getT()
   * @see #getterm()
   * @generated
   */
  EReference getterm_T();

  /**
   * Returns the meta object for class '{@link lu.uni.socrates.termprime <em>termprime</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>termprime</em>'.
   * @see lu.uni.socrates.termprime
   * @generated
   */
  EClass gettermprime();

  /**
   * Returns the meta object for the attribute '{@link lu.uni.socrates.termprime#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see lu.uni.socrates.termprime#getOp()
   * @see #gettermprime()
   * @generated
   */
  EAttribute gettermprime_Op();

  /**
   * Returns the meta object for the containment reference '{@link lu.uni.socrates.termprime#getT <em>T</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>T</em>'.
   * @see lu.uni.socrates.termprime#getT()
   * @see #gettermprime()
   * @generated
   */
  EReference gettermprime_T();

  /**
   * Returns the meta object for the containment reference '{@link lu.uni.socrates.termprime#getF1 <em>F1</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>F1</em>'.
   * @see lu.uni.socrates.termprime#getF1()
   * @see #gettermprime()
   * @generated
   */
  EReference gettermprime_F1();

  /**
   * Returns the meta object for class '{@link lu.uni.socrates.expression <em>expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>expression</em>'.
   * @see lu.uni.socrates.expression
   * @generated
   */
  EClass getexpression();

  /**
   * Returns the meta object for the containment reference '{@link lu.uni.socrates.expression#getExpb <em>Expb</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expb</em>'.
   * @see lu.uni.socrates.expression#getExpb()
   * @see #getexpression()
   * @generated
   */
  EReference getexpression_Expb();

  /**
   * Returns the meta object for class '{@link lu.uni.socrates.expressionb <em>expressionb</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>expressionb</em>'.
   * @see lu.uni.socrates.expressionb
   * @generated
   */
  EClass getexpressionb();

  /**
   * Returns the meta object for the containment reference '{@link lu.uni.socrates.expressionb#getTerm <em>Term</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Term</em>'.
   * @see lu.uni.socrates.expressionb#getTerm()
   * @see #getexpressionb()
   * @generated
   */
  EReference getexpressionb_Term();

  /**
   * Returns the meta object for the containment reference '{@link lu.uni.socrates.expressionb#getExpprime <em>Expprime</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expprime</em>'.
   * @see lu.uni.socrates.expressionb#getExpprime()
   * @see #getexpressionb()
   * @generated
   */
  EReference getexpressionb_Expprime();

  /**
   * Returns the meta object for class '{@link lu.uni.socrates.expressionprime <em>expressionprime</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>expressionprime</em>'.
   * @see lu.uni.socrates.expressionprime
   * @generated
   */
  EClass getexpressionprime();

  /**
   * Returns the meta object for the attribute '{@link lu.uni.socrates.expressionprime#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see lu.uni.socrates.expressionprime#getOp()
   * @see #getexpressionprime()
   * @generated
   */
  EAttribute getexpressionprime_Op();

  /**
   * Returns the meta object for the containment reference '{@link lu.uni.socrates.expressionprime#getT2 <em>T2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>T2</em>'.
   * @see lu.uni.socrates.expressionprime#getT2()
   * @see #getexpressionprime()
   * @generated
   */
  EReference getexpressionprime_T2();

  /**
   * Returns the meta object for the containment reference '{@link lu.uni.socrates.expressionprime#getF <em>F</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>F</em>'.
   * @see lu.uni.socrates.expressionprime#getF()
   * @see #getexpressionprime()
   * @generated
   */
  EReference getexpressionprime_F();

  /**
   * Returns the meta object for class '{@link lu.uni.socrates.expressionterm <em>expressionterm</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>expressionterm</em>'.
   * @see lu.uni.socrates.expressionterm
   * @generated
   */
  EClass getexpressionterm();

  /**
   * Returns the meta object for the containment reference '{@link lu.uni.socrates.expressionterm#getTerm <em>Term</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Term</em>'.
   * @see lu.uni.socrates.expressionterm#getTerm()
   * @see #getexpressionterm()
   * @generated
   */
  EReference getexpressionterm_Term();

  /**
   * Returns the meta object for the containment reference '{@link lu.uni.socrates.expressionterm#getExpprime <em>Expprime</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expprime</em>'.
   * @see lu.uni.socrates.expressionterm#getExpprime()
   * @see #getexpressionterm()
   * @generated
   */
  EReference getexpressionterm_Expprime();

  /**
   * Returns the meta object for class '{@link lu.uni.socrates.expressiontermprime <em>expressiontermprime</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>expressiontermprime</em>'.
   * @see lu.uni.socrates.expressiontermprime
   * @generated
   */
  EClass getexpressiontermprime();

  /**
   * Returns the meta object for the attribute '{@link lu.uni.socrates.expressiontermprime#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see lu.uni.socrates.expressiontermprime#getOp()
   * @see #getexpressiontermprime()
   * @generated
   */
  EAttribute getexpressiontermprime_Op();

  /**
   * Returns the meta object for the containment reference '{@link lu.uni.socrates.expressiontermprime#getT2 <em>T2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>T2</em>'.
   * @see lu.uni.socrates.expressiontermprime#getT2()
   * @see #getexpressiontermprime()
   * @generated
   */
  EReference getexpressiontermprime_T2();

  /**
   * Returns the meta object for the containment reference '{@link lu.uni.socrates.expressiontermprime#getF <em>F</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>F</em>'.
   * @see lu.uni.socrates.expressiontermprime#getF()
   * @see #getexpressiontermprime()
   * @generated
   */
  EReference getexpressiontermprime_F();

  /**
   * Returns the meta object for class '{@link lu.uni.socrates.ExpressionAtom <em>Expression Atom</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression Atom</em>'.
   * @see lu.uni.socrates.ExpressionAtom
   * @generated
   */
  EClass getExpressionAtom();

  /**
   * Returns the meta object for the containment reference '{@link lu.uni.socrates.ExpressionAtom#getExp <em>Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Exp</em>'.
   * @see lu.uni.socrates.ExpressionAtom#getExp()
   * @see #getExpressionAtom()
   * @generated
   */
  EReference getExpressionAtom_Exp();

  /**
   * Returns the meta object for the attribute '{@link lu.uni.socrates.ExpressionAtom#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see lu.uni.socrates.ExpressionAtom#getOp()
   * @see #getExpressionAtom()
   * @generated
   */
  EAttribute getExpressionAtom_Op();

  /**
   * Returns the meta object for class '{@link lu.uni.socrates.Basicexpression <em>Basicexpression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Basicexpression</em>'.
   * @see lu.uni.socrates.Basicexpression
   * @generated
   */
  EClass getBasicexpression();

  /**
   * Returns the meta object for the containment reference '{@link lu.uni.socrates.Basicexpression#getExp <em>Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Exp</em>'.
   * @see lu.uni.socrates.Basicexpression#getExp()
   * @see #getBasicexpression()
   * @generated
   */
  EReference getBasicexpression_Exp();

  /**
   * Returns the meta object for class '{@link lu.uni.socrates.basicformulae <em>basicformulae</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>basicformulae</em>'.
   * @see lu.uni.socrates.basicformulae
   * @generated
   */
  EClass getbasicformulae();

  /**
   * Returns the meta object for the containment reference '{@link lu.uni.socrates.basicformulae#getF <em>F</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>F</em>'.
   * @see lu.uni.socrates.basicformulae#getF()
   * @see #getbasicformulae()
   * @generated
   */
  EReference getbasicformulae_F();

  /**
   * Returns the meta object for class '{@link lu.uni.socrates.boundterm <em>boundterm</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>boundterm</em>'.
   * @see lu.uni.socrates.boundterm
   * @generated
   */
  EClass getboundterm();

  /**
   * Returns the meta object for the containment reference '{@link lu.uni.socrates.boundterm#getRef <em>Ref</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Ref</em>'.
   * @see lu.uni.socrates.boundterm#getRef()
   * @see #getboundterm()
   * @generated
   */
  EReference getboundterm_Ref();

  /**
   * Returns the meta object for the attribute '{@link lu.uni.socrates.boundterm#getL <em>L</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>L</em>'.
   * @see lu.uni.socrates.boundterm#getL()
   * @see #getboundterm()
   * @generated
   */
  EAttribute getboundterm_L();

  /**
   * Returns the meta object for the containment reference '{@link lu.uni.socrates.boundterm#getLeftbound <em>Leftbound</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Leftbound</em>'.
   * @see lu.uni.socrates.boundterm#getLeftbound()
   * @see #getboundterm()
   * @generated
   */
  EReference getboundterm_Leftbound();

  /**
   * Returns the meta object for the containment reference '{@link lu.uni.socrates.boundterm#getRightbound <em>Rightbound</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Rightbound</em>'.
   * @see lu.uni.socrates.boundterm#getRightbound()
   * @see #getboundterm()
   * @generated
   */
  EReference getboundterm_Rightbound();

  /**
   * Returns the meta object for the attribute '{@link lu.uni.socrates.boundterm#getR <em>R</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>R</em>'.
   * @see lu.uni.socrates.boundterm#getR()
   * @see #getboundterm()
   * @generated
   */
  EAttribute getboundterm_R();

  /**
   * Returns the meta object for class '{@link lu.uni.socrates.timedterm <em>timedterm</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>timedterm</em>'.
   * @see lu.uni.socrates.timedterm
   * @generated
   */
  EClass gettimedterm();

  /**
   * Returns the meta object for the attribute '{@link lu.uni.socrates.timedterm#getInf <em>Inf</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Inf</em>'.
   * @see lu.uni.socrates.timedterm#getInf()
   * @see #gettimedterm()
   * @generated
   */
  EAttribute gettimedterm_Inf();

  /**
   * Returns the meta object for the attribute '{@link lu.uni.socrates.timedterm#getNumber <em>Number</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Number</em>'.
   * @see lu.uni.socrates.timedterm#getNumber()
   * @see #gettimedterm()
   * @generated
   */
  EAttribute gettimedterm_Number();

  /**
   * Returns the meta object for the reference '{@link lu.uni.socrates.timedterm#getRef <em>Ref</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Ref</em>'.
   * @see lu.uni.socrates.timedterm#getRef()
   * @see #gettimedterm()
   * @generated
   */
  EReference gettimedterm_Ref();

  /**
   * Returns the meta object for the attribute '{@link lu.uni.socrates.timedterm#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see lu.uni.socrates.timedterm#getOp()
   * @see #gettimedterm()
   * @generated
   */
  EAttribute gettimedterm_Op();

  /**
   * Returns the meta object for the containment reference '{@link lu.uni.socrates.timedterm#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Value</em>'.
   * @see lu.uni.socrates.timedterm#getValue()
   * @see #gettimedterm()
   * @generated
   */
  EReference gettimedterm_Value();

  /**
   * Returns the meta object for class '{@link lu.uni.socrates.atom <em>atom</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>atom</em>'.
   * @see lu.uni.socrates.atom
   * @generated
   */
  EClass getatom();

  /**
   * Returns the meta object for the containment reference '{@link lu.uni.socrates.atom#getF <em>F</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>F</em>'.
   * @see lu.uni.socrates.atom#getF()
   * @see #getatom()
   * @generated
   */
  EReference getatom_F();

  /**
   * Returns the meta object for the containment reference '{@link lu.uni.socrates.atom#getS1 <em>S1</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>S1</em>'.
   * @see lu.uni.socrates.atom#getS1()
   * @see #getatom()
   * @generated
   */
  EReference getatom_S1();

  /**
   * Returns the meta object for the attribute '{@link lu.uni.socrates.atom#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see lu.uni.socrates.atom#getOp()
   * @see #getatom()
   * @generated
   */
  EAttribute getatom_Op();

  /**
   * Returns the meta object for the containment reference '{@link lu.uni.socrates.atom#getS2 <em>S2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>S2</em>'.
   * @see lu.uni.socrates.atom#getS2()
   * @see #getatom()
   * @generated
   */
  EReference getatom_S2();

  /**
   * Returns the meta object for class '{@link lu.uni.socrates.value <em>value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>value</em>'.
   * @see lu.uni.socrates.value
   * @generated
   */
  EClass getvalue();

  /**
   * Returns the meta object for the containment reference '{@link lu.uni.socrates.value#getExp <em>Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Exp</em>'.
   * @see lu.uni.socrates.value#getExp()
   * @see #getvalue()
   * @generated
   */
  EReference getvalue_Exp();

  /**
   * Returns the meta object for the attribute '{@link lu.uni.socrates.value#getNumber <em>Number</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Number</em>'.
   * @see lu.uni.socrates.value#getNumber()
   * @see #getvalue()
   * @generated
   */
  EAttribute getvalue_Number();

  /**
   * Returns the meta object for the reference '{@link lu.uni.socrates.value#getRef <em>Ref</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Ref</em>'.
   * @see lu.uni.socrates.value#getRef()
   * @see #getvalue()
   * @generated
   */
  EReference getvalue_Ref();

  /**
   * Returns the meta object for the attribute '{@link lu.uni.socrates.value#getFloat <em>Float</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Float</em>'.
   * @see lu.uni.socrates.value#getFloat()
   * @see #getvalue()
   * @generated
   */
  EAttribute getvalue_Float();

  /**
   * Returns the meta object for class '{@link lu.uni.socrates.Signal <em>Signal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Signal</em>'.
   * @see lu.uni.socrates.Signal
   * @generated
   */
  EClass getSignal();

  /**
   * Returns the meta object for the reference '{@link lu.uni.socrates.Signal#getSignalid <em>Signalid</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Signalid</em>'.
   * @see lu.uni.socrates.Signal#getSignalid()
   * @see #getSignal()
   * @generated
   */
  EReference getSignal_Signalid();

  /**
   * Returns the meta object for the containment reference '{@link lu.uni.socrates.Signal#getTimdedterm <em>Timdedterm</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Timdedterm</em>'.
   * @see lu.uni.socrates.Signal#getTimdedterm()
   * @see #getSignal()
   * @generated
   */
  EReference getSignal_Timdedterm();

  /**
   * Returns the meta object for the attribute '{@link lu.uni.socrates.Signal#getIndx1 <em>Indx1</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Indx1</em>'.
   * @see lu.uni.socrates.Signal#getIndx1()
   * @see #getSignal()
   * @generated
   */
  EAttribute getSignal_Indx1();

  /**
   * Returns the meta object for the attribute '{@link lu.uni.socrates.Signal#getIndx2 <em>Indx2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Indx2</em>'.
   * @see lu.uni.socrates.Signal#getIndx2()
   * @see #getSignal()
   * @generated
   */
  EAttribute getSignal_Indx2();

  /**
   * Returns the meta object for class '{@link lu.uni.socrates.AbsEXP <em>Abs EXP</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Abs EXP</em>'.
   * @see lu.uni.socrates.AbsEXP
   * @generated
   */
  EClass getAbsEXP();

  /**
   * Returns the meta object for the containment reference '{@link lu.uni.socrates.AbsEXP#getExp1 <em>Exp1</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Exp1</em>'.
   * @see lu.uni.socrates.AbsEXP#getExp1()
   * @see #getAbsEXP()
   * @generated
   */
  EReference getAbsEXP_Exp1();

  /**
   * Returns the meta object for class '{@link lu.uni.socrates.Normexp <em>Normexp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Normexp</em>'.
   * @see lu.uni.socrates.Normexp
   * @generated
   */
  EClass getNormexp();

  /**
   * Returns the meta object for the containment reference '{@link lu.uni.socrates.Normexp#getExp1 <em>Exp1</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Exp1</em>'.
   * @see lu.uni.socrates.Normexp#getExp1()
   * @see #getNormexp()
   * @generated
   */
  EReference getNormexp_Exp1();

  /**
   * Returns the meta object for class '{@link lu.uni.socrates.Sin <em>Sin</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Sin</em>'.
   * @see lu.uni.socrates.Sin
   * @generated
   */
  EClass getSin();

  /**
   * Returns the meta object for the containment reference '{@link lu.uni.socrates.Sin#getExp1 <em>Exp1</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Exp1</em>'.
   * @see lu.uni.socrates.Sin#getExp1()
   * @see #getSin()
   * @generated
   */
  EReference getSin_Exp1();

  /**
   * Returns the meta object for class '{@link lu.uni.socrates.Cos <em>Cos</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Cos</em>'.
   * @see lu.uni.socrates.Cos
   * @generated
   */
  EClass getCos();

  /**
   * Returns the meta object for the containment reference '{@link lu.uni.socrates.Cos#getExp1 <em>Exp1</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Exp1</em>'.
   * @see lu.uni.socrates.Cos#getExp1()
   * @see #getCos()
   * @generated
   */
  EReference getCos_Exp1();

  /**
   * Returns the meta object for class '{@link lu.uni.socrates.Sqrt <em>Sqrt</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Sqrt</em>'.
   * @see lu.uni.socrates.Sqrt
   * @generated
   */
  EClass getSqrt();

  /**
   * Returns the meta object for the containment reference '{@link lu.uni.socrates.Sqrt#getExp1 <em>Exp1</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Exp1</em>'.
   * @see lu.uni.socrates.Sqrt#getExp1()
   * @see #getSqrt()
   * @generated
   */
  EReference getSqrt_Exp1();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  SocratesFactory getSocratesFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link lu.uni.socrates.impl.SocratesImpl <em>Socrates</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see lu.uni.socrates.impl.SocratesImpl
     * @see lu.uni.socrates.impl.SocratesPackageImpl#getSocrates()
     * @generated
     */
    EClass SOCRATES = eINSTANCE.getSocrates();

    /**
     * The meta object literal for the '<em><b>Oracles</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SOCRATES__ORACLES = eINSTANCE.getSocrates_Oracles();

    /**
     * The meta object literal for the '{@link lu.uni.socrates.impl.OracleImpl <em>Oracle</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see lu.uni.socrates.impl.OracleImpl
     * @see lu.uni.socrates.impl.SocratesPackageImpl#getOracle()
     * @generated
     */
    EClass ORACLE = eINSTANCE.getOracle();

    /**
     * The meta object literal for the '<em><b>Model Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ORACLE__MODEL_NAME = eINSTANCE.getOracle_ModelName();

    /**
     * The meta object literal for the '<em><b>Path</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ORACLE__PATH = eINSTANCE.getOracle_Path();

    /**
     * The meta object literal for the '<em><b>Reqname</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ORACLE__REQNAME = eINSTANCE.getOracle_Reqname();

    /**
     * The meta object literal for the '<em><b>Signdef</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ORACLE__SIGNDEF = eINSTANCE.getOracle_Signdef();

    /**
     * The meta object literal for the '<em><b>Constant Definitions</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ORACLE__CONSTANT_DEFINITIONS = eINSTANCE.getOracle_ConstantDefinitions();

    /**
     * The meta object literal for the '<em><b>Requirement</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ORACLE__REQUIREMENT = eINSTANCE.getOracle_Requirement();

    /**
     * The meta object literal for the '{@link lu.uni.socrates.impl.RequirementImpl <em>Requirement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see lu.uni.socrates.impl.RequirementImpl
     * @see lu.uni.socrates.impl.SocratesPackageImpl#getRequirement()
     * @generated
     */
    EClass REQUIREMENT = eINSTANCE.getRequirement();

    /**
     * The meta object literal for the '<em><b>Formula</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference REQUIREMENT__FORMULA = eINSTANCE.getRequirement_Formula();

    /**
     * The meta object literal for the '{@link lu.uni.socrates.impl.SignalsdefinitionImpl <em>Signalsdefinition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see lu.uni.socrates.impl.SignalsdefinitionImpl
     * @see lu.uni.socrates.impl.SocratesPackageImpl#getSignalsdefinition()
     * @generated
     */
    EClass SIGNALSDEFINITION = eINSTANCE.getSignalsdefinition();

    /**
     * The meta object literal for the '<em><b>Signals</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SIGNALSDEFINITION__SIGNALS = eINSTANCE.getSignalsdefinition_Signals();

    /**
     * The meta object literal for the '{@link lu.uni.socrates.impl.ConstantsDefinitionImpl <em>Constants Definition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see lu.uni.socrates.impl.ConstantsDefinitionImpl
     * @see lu.uni.socrates.impl.SocratesPackageImpl#getConstantsDefinition()
     * @generated
     */
    EClass CONSTANTS_DEFINITION = eINSTANCE.getConstantsDefinition();

    /**
     * The meta object literal for the '<em><b>Constants</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONSTANTS_DEFINITION__CONSTANTS = eINSTANCE.getConstantsDefinition_Constants();

    /**
     * The meta object literal for the '{@link lu.uni.socrates.impl.ConstantDefinitionImpl <em>Constant Definition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see lu.uni.socrates.impl.ConstantDefinitionImpl
     * @see lu.uni.socrates.impl.SocratesPackageImpl#getConstantDefinition()
     * @generated
     */
    EClass CONSTANT_DEFINITION = eINSTANCE.getConstantDefinition();

    /**
     * The meta object literal for the '<em><b>Constantid</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONSTANT_DEFINITION__CONSTANTID = eINSTANCE.getConstantDefinition_Constantid();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CONSTANT_DEFINITION__VALUE = eINSTANCE.getConstantDefinition_Value();

    /**
     * The meta object literal for the '{@link lu.uni.socrates.impl.SignalIDImpl <em>Signal ID</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see lu.uni.socrates.impl.SignalIDImpl
     * @see lu.uni.socrates.impl.SocratesPackageImpl#getSignalID()
     * @generated
     */
    EClass SIGNAL_ID = eINSTANCE.getSignalID();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SIGNAL_ID__NAME = eINSTANCE.getSignalID_Name();

    /**
     * The meta object literal for the '{@link lu.uni.socrates.impl.ConstantIdImpl <em>Constant Id</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see lu.uni.socrates.impl.ConstantIdImpl
     * @see lu.uni.socrates.impl.SocratesPackageImpl#getConstantId()
     * @generated
     */
    EClass CONSTANT_ID = eINSTANCE.getConstantId();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CONSTANT_ID__NAME = eINSTANCE.getConstantId_Name();

    /**
     * The meta object literal for the '{@link lu.uni.socrates.impl.TvariableImpl <em>Tvariable</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see lu.uni.socrates.impl.TvariableImpl
     * @see lu.uni.socrates.impl.SocratesPackageImpl#getTvariable()
     * @generated
     */
    EClass TVARIABLE = eINSTANCE.getTvariable();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TVARIABLE__NAME = eINSTANCE.getTvariable_Name();

    /**
     * The meta object literal for the '{@link lu.uni.socrates.impl.negationformulaImpl <em>negationformula</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see lu.uni.socrates.impl.negationformulaImpl
     * @see lu.uni.socrates.impl.SocratesPackageImpl#getnegationformula()
     * @generated
     */
    EClass NEGATIONFORMULA = eINSTANCE.getnegationformula();

    /**
     * The meta object literal for the '<em><b>Negationchild</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NEGATIONFORMULA__NEGATIONCHILD = eINSTANCE.getnegationformula_Negationchild();

    /**
     * The meta object literal for the '{@link lu.uni.socrates.impl.forAllformulaImpl <em>for Allformula</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see lu.uni.socrates.impl.forAllformulaImpl
     * @see lu.uni.socrates.impl.SocratesPackageImpl#getforAllformula()
     * @generated
     */
    EClass FOR_ALLFORMULA = eINSTANCE.getforAllformula();

    /**
     * The meta object literal for the '<em><b>Bound</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FOR_ALLFORMULA__BOUND = eINSTANCE.getforAllformula_Bound();

    /**
     * The meta object literal for the '<em><b>Forallchild</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FOR_ALLFORMULA__FORALLCHILD = eINSTANCE.getforAllformula_Forallchild();

    /**
     * The meta object literal for the '{@link lu.uni.socrates.impl.existsformulaImpl <em>existsformula</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see lu.uni.socrates.impl.existsformulaImpl
     * @see lu.uni.socrates.impl.SocratesPackageImpl#getexistsformula()
     * @generated
     */
    EClass EXISTSFORMULA = eINSTANCE.getexistsformula();

    /**
     * The meta object literal for the '<em><b>Bound</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXISTSFORMULA__BOUND = eINSTANCE.getexistsformula_Bound();

    /**
     * The meta object literal for the '<em><b>Existschild</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXISTSFORMULA__EXISTSCHILD = eINSTANCE.getexistsformula_Existschild();

    /**
     * The meta object literal for the '{@link lu.uni.socrates.impl.formulaImpl <em>formula</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see lu.uni.socrates.impl.formulaImpl
     * @see lu.uni.socrates.impl.SocratesPackageImpl#getformula()
     * @generated
     */
    EClass FORMULA = eINSTANCE.getformula();

    /**
     * The meta object literal for the '<em><b>F</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FORMULA__F = eINSTANCE.getformula_F();

    /**
     * The meta object literal for the '{@link lu.uni.socrates.impl.formulabImpl <em>formulab</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see lu.uni.socrates.impl.formulabImpl
     * @see lu.uni.socrates.impl.SocratesPackageImpl#getformulab()
     * @generated
     */
    EClass FORMULAB = eINSTANCE.getformulab();

    /**
     * The meta object literal for the '<em><b>A</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FORMULAB__A = eINSTANCE.getformulab_A();

    /**
     * The meta object literal for the '<em><b>T</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FORMULAB__T = eINSTANCE.getformulab_T();

    /**
     * The meta object literal for the '{@link lu.uni.socrates.impl.formulabprimeImpl <em>formulabprime</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see lu.uni.socrates.impl.formulabprimeImpl
     * @see lu.uni.socrates.impl.SocratesPackageImpl#getformulabprime()
     * @generated
     */
    EClass FORMULABPRIME = eINSTANCE.getformulabprime();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FORMULABPRIME__OP = eINSTANCE.getformulabprime_Op();

    /**
     * The meta object literal for the '<em><b>T2</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FORMULABPRIME__T2 = eINSTANCE.getformulabprime_T2();

    /**
     * The meta object literal for the '<em><b>F</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FORMULABPRIME__F = eINSTANCE.getformulabprime_F();

    /**
     * The meta object literal for the '{@link lu.uni.socrates.impl.termImpl <em>term</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see lu.uni.socrates.impl.termImpl
     * @see lu.uni.socrates.impl.SocratesPackageImpl#getterm()
     * @generated
     */
    EClass TERM = eINSTANCE.getterm();

    /**
     * The meta object literal for the '<em><b>A</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TERM__A = eINSTANCE.getterm_A();

    /**
     * The meta object literal for the '<em><b>T</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TERM__T = eINSTANCE.getterm_T();

    /**
     * The meta object literal for the '{@link lu.uni.socrates.impl.termprimeImpl <em>termprime</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see lu.uni.socrates.impl.termprimeImpl
     * @see lu.uni.socrates.impl.SocratesPackageImpl#gettermprime()
     * @generated
     */
    EClass TERMPRIME = eINSTANCE.gettermprime();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TERMPRIME__OP = eINSTANCE.gettermprime_Op();

    /**
     * The meta object literal for the '<em><b>T</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TERMPRIME__T = eINSTANCE.gettermprime_T();

    /**
     * The meta object literal for the '<em><b>F1</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TERMPRIME__F1 = eINSTANCE.gettermprime_F1();

    /**
     * The meta object literal for the '{@link lu.uni.socrates.impl.expressionImpl <em>expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see lu.uni.socrates.impl.expressionImpl
     * @see lu.uni.socrates.impl.SocratesPackageImpl#getexpression()
     * @generated
     */
    EClass EXPRESSION = eINSTANCE.getexpression();

    /**
     * The meta object literal for the '<em><b>Expb</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__EXPB = eINSTANCE.getexpression_Expb();

    /**
     * The meta object literal for the '{@link lu.uni.socrates.impl.expressionbImpl <em>expressionb</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see lu.uni.socrates.impl.expressionbImpl
     * @see lu.uni.socrates.impl.SocratesPackageImpl#getexpressionb()
     * @generated
     */
    EClass EXPRESSIONB = eINSTANCE.getexpressionb();

    /**
     * The meta object literal for the '<em><b>Term</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSIONB__TERM = eINSTANCE.getexpressionb_Term();

    /**
     * The meta object literal for the '<em><b>Expprime</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSIONB__EXPPRIME = eINSTANCE.getexpressionb_Expprime();

    /**
     * The meta object literal for the '{@link lu.uni.socrates.impl.expressionprimeImpl <em>expressionprime</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see lu.uni.socrates.impl.expressionprimeImpl
     * @see lu.uni.socrates.impl.SocratesPackageImpl#getexpressionprime()
     * @generated
     */
    EClass EXPRESSIONPRIME = eINSTANCE.getexpressionprime();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXPRESSIONPRIME__OP = eINSTANCE.getexpressionprime_Op();

    /**
     * The meta object literal for the '<em><b>T2</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSIONPRIME__T2 = eINSTANCE.getexpressionprime_T2();

    /**
     * The meta object literal for the '<em><b>F</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSIONPRIME__F = eINSTANCE.getexpressionprime_F();

    /**
     * The meta object literal for the '{@link lu.uni.socrates.impl.expressiontermImpl <em>expressionterm</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see lu.uni.socrates.impl.expressiontermImpl
     * @see lu.uni.socrates.impl.SocratesPackageImpl#getexpressionterm()
     * @generated
     */
    EClass EXPRESSIONTERM = eINSTANCE.getexpressionterm();

    /**
     * The meta object literal for the '<em><b>Term</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSIONTERM__TERM = eINSTANCE.getexpressionterm_Term();

    /**
     * The meta object literal for the '<em><b>Expprime</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSIONTERM__EXPPRIME = eINSTANCE.getexpressionterm_Expprime();

    /**
     * The meta object literal for the '{@link lu.uni.socrates.impl.expressiontermprimeImpl <em>expressiontermprime</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see lu.uni.socrates.impl.expressiontermprimeImpl
     * @see lu.uni.socrates.impl.SocratesPackageImpl#getexpressiontermprime()
     * @generated
     */
    EClass EXPRESSIONTERMPRIME = eINSTANCE.getexpressiontermprime();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXPRESSIONTERMPRIME__OP = eINSTANCE.getexpressiontermprime_Op();

    /**
     * The meta object literal for the '<em><b>T2</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSIONTERMPRIME__T2 = eINSTANCE.getexpressiontermprime_T2();

    /**
     * The meta object literal for the '<em><b>F</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSIONTERMPRIME__F = eINSTANCE.getexpressiontermprime_F();

    /**
     * The meta object literal for the '{@link lu.uni.socrates.impl.ExpressionAtomImpl <em>Expression Atom</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see lu.uni.socrates.impl.ExpressionAtomImpl
     * @see lu.uni.socrates.impl.SocratesPackageImpl#getExpressionAtom()
     * @generated
     */
    EClass EXPRESSION_ATOM = eINSTANCE.getExpressionAtom();

    /**
     * The meta object literal for the '<em><b>Exp</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION_ATOM__EXP = eINSTANCE.getExpressionAtom_Exp();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXPRESSION_ATOM__OP = eINSTANCE.getExpressionAtom_Op();

    /**
     * The meta object literal for the '{@link lu.uni.socrates.impl.BasicexpressionImpl <em>Basicexpression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see lu.uni.socrates.impl.BasicexpressionImpl
     * @see lu.uni.socrates.impl.SocratesPackageImpl#getBasicexpression()
     * @generated
     */
    EClass BASICEXPRESSION = eINSTANCE.getBasicexpression();

    /**
     * The meta object literal for the '<em><b>Exp</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BASICEXPRESSION__EXP = eINSTANCE.getBasicexpression_Exp();

    /**
     * The meta object literal for the '{@link lu.uni.socrates.impl.basicformulaeImpl <em>basicformulae</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see lu.uni.socrates.impl.basicformulaeImpl
     * @see lu.uni.socrates.impl.SocratesPackageImpl#getbasicformulae()
     * @generated
     */
    EClass BASICFORMULAE = eINSTANCE.getbasicformulae();

    /**
     * The meta object literal for the '<em><b>F</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BASICFORMULAE__F = eINSTANCE.getbasicformulae_F();

    /**
     * The meta object literal for the '{@link lu.uni.socrates.impl.boundtermImpl <em>boundterm</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see lu.uni.socrates.impl.boundtermImpl
     * @see lu.uni.socrates.impl.SocratesPackageImpl#getboundterm()
     * @generated
     */
    EClass BOUNDTERM = eINSTANCE.getboundterm();

    /**
     * The meta object literal for the '<em><b>Ref</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BOUNDTERM__REF = eINSTANCE.getboundterm_Ref();

    /**
     * The meta object literal for the '<em><b>L</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BOUNDTERM__L = eINSTANCE.getboundterm_L();

    /**
     * The meta object literal for the '<em><b>Leftbound</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BOUNDTERM__LEFTBOUND = eINSTANCE.getboundterm_Leftbound();

    /**
     * The meta object literal for the '<em><b>Rightbound</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BOUNDTERM__RIGHTBOUND = eINSTANCE.getboundterm_Rightbound();

    /**
     * The meta object literal for the '<em><b>R</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BOUNDTERM__R = eINSTANCE.getboundterm_R();

    /**
     * The meta object literal for the '{@link lu.uni.socrates.impl.timedtermImpl <em>timedterm</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see lu.uni.socrates.impl.timedtermImpl
     * @see lu.uni.socrates.impl.SocratesPackageImpl#gettimedterm()
     * @generated
     */
    EClass TIMEDTERM = eINSTANCE.gettimedterm();

    /**
     * The meta object literal for the '<em><b>Inf</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TIMEDTERM__INF = eINSTANCE.gettimedterm_Inf();

    /**
     * The meta object literal for the '<em><b>Number</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TIMEDTERM__NUMBER = eINSTANCE.gettimedterm_Number();

    /**
     * The meta object literal for the '<em><b>Ref</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TIMEDTERM__REF = eINSTANCE.gettimedterm_Ref();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TIMEDTERM__OP = eINSTANCE.gettimedterm_Op();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TIMEDTERM__VALUE = eINSTANCE.gettimedterm_Value();

    /**
     * The meta object literal for the '{@link lu.uni.socrates.impl.atomImpl <em>atom</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see lu.uni.socrates.impl.atomImpl
     * @see lu.uni.socrates.impl.SocratesPackageImpl#getatom()
     * @generated
     */
    EClass ATOM = eINSTANCE.getatom();

    /**
     * The meta object literal for the '<em><b>F</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ATOM__F = eINSTANCE.getatom_F();

    /**
     * The meta object literal for the '<em><b>S1</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ATOM__S1 = eINSTANCE.getatom_S1();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ATOM__OP = eINSTANCE.getatom_Op();

    /**
     * The meta object literal for the '<em><b>S2</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ATOM__S2 = eINSTANCE.getatom_S2();

    /**
     * The meta object literal for the '{@link lu.uni.socrates.impl.valueImpl <em>value</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see lu.uni.socrates.impl.valueImpl
     * @see lu.uni.socrates.impl.SocratesPackageImpl#getvalue()
     * @generated
     */
    EClass VALUE = eINSTANCE.getvalue();

    /**
     * The meta object literal for the '<em><b>Exp</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VALUE__EXP = eINSTANCE.getvalue_Exp();

    /**
     * The meta object literal for the '<em><b>Number</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VALUE__NUMBER = eINSTANCE.getvalue_Number();

    /**
     * The meta object literal for the '<em><b>Ref</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VALUE__REF = eINSTANCE.getvalue_Ref();

    /**
     * The meta object literal for the '<em><b>Float</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VALUE__FLOAT = eINSTANCE.getvalue_Float();

    /**
     * The meta object literal for the '{@link lu.uni.socrates.impl.SignalImpl <em>Signal</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see lu.uni.socrates.impl.SignalImpl
     * @see lu.uni.socrates.impl.SocratesPackageImpl#getSignal()
     * @generated
     */
    EClass SIGNAL = eINSTANCE.getSignal();

    /**
     * The meta object literal for the '<em><b>Signalid</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SIGNAL__SIGNALID = eINSTANCE.getSignal_Signalid();

    /**
     * The meta object literal for the '<em><b>Timdedterm</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SIGNAL__TIMDEDTERM = eINSTANCE.getSignal_Timdedterm();

    /**
     * The meta object literal for the '<em><b>Indx1</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SIGNAL__INDX1 = eINSTANCE.getSignal_Indx1();

    /**
     * The meta object literal for the '<em><b>Indx2</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SIGNAL__INDX2 = eINSTANCE.getSignal_Indx2();

    /**
     * The meta object literal for the '{@link lu.uni.socrates.impl.AbsEXPImpl <em>Abs EXP</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see lu.uni.socrates.impl.AbsEXPImpl
     * @see lu.uni.socrates.impl.SocratesPackageImpl#getAbsEXP()
     * @generated
     */
    EClass ABS_EXP = eINSTANCE.getAbsEXP();

    /**
     * The meta object literal for the '<em><b>Exp1</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ABS_EXP__EXP1 = eINSTANCE.getAbsEXP_Exp1();

    /**
     * The meta object literal for the '{@link lu.uni.socrates.impl.NormexpImpl <em>Normexp</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see lu.uni.socrates.impl.NormexpImpl
     * @see lu.uni.socrates.impl.SocratesPackageImpl#getNormexp()
     * @generated
     */
    EClass NORMEXP = eINSTANCE.getNormexp();

    /**
     * The meta object literal for the '<em><b>Exp1</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NORMEXP__EXP1 = eINSTANCE.getNormexp_Exp1();

    /**
     * The meta object literal for the '{@link lu.uni.socrates.impl.SinImpl <em>Sin</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see lu.uni.socrates.impl.SinImpl
     * @see lu.uni.socrates.impl.SocratesPackageImpl#getSin()
     * @generated
     */
    EClass SIN = eINSTANCE.getSin();

    /**
     * The meta object literal for the '<em><b>Exp1</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SIN__EXP1 = eINSTANCE.getSin_Exp1();

    /**
     * The meta object literal for the '{@link lu.uni.socrates.impl.CosImpl <em>Cos</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see lu.uni.socrates.impl.CosImpl
     * @see lu.uni.socrates.impl.SocratesPackageImpl#getCos()
     * @generated
     */
    EClass COS = eINSTANCE.getCos();

    /**
     * The meta object literal for the '<em><b>Exp1</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COS__EXP1 = eINSTANCE.getCos_Exp1();

    /**
     * The meta object literal for the '{@link lu.uni.socrates.impl.SqrtImpl <em>Sqrt</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see lu.uni.socrates.impl.SqrtImpl
     * @see lu.uni.socrates.impl.SocratesPackageImpl#getSqrt()
     * @generated
     */
    EClass SQRT = eINSTANCE.getSqrt();

    /**
     * The meta object literal for the '<em><b>Exp1</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SQRT__EXP1 = eINSTANCE.getSqrt_Exp1();

  }

} //SocratesPackage
